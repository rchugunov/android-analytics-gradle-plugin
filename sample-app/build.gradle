buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0-alpha2'
        classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:1.1"
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.4"
    }
}

plugins {
    id "com.github.rchugunov.android-analytics" version "0.1.0"
}

repositories {
    jcenter()
}

apply plugin: 'com.android.application'
apply plugin: "org.sonarqube"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.github.rchugunov.andlyticsgradleplugin"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha2'
    compile 'com.android.support:design:23.4.0'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support:support-annotations:23.4.0'
}

androidAnalytics {

    // SPECIFY ApplcationId IF IT IS DIFFERENT FROM ONE IN android.defaultConfig
//    applicationId = {
//        Properties properties = new Properties()
//        properties.load(project.rootProject.file('local.properties').newDataInputStream())
//        properties.getProperty('applicationId')
//    }.call()

    // CHANGE CODE HERE TO SPECIFY PATH TO GoogleServiceAccountCredentials.json
    // Create local.properties and specify path here. Don't commit local.properties and never keep
    // GoogleServiceAccountCredentials.json in your project directory
    googleServiceAccountJson file({
        Properties properties = new Properties()

        File local = project.rootProject.file('local.properties');
        if (local.exists()) {
            properties.load(local.newDataInputStream())
            properties.getProperty('google-play-service-account-json')
        } else {
            ""
        }

    })
}

sonarqube {
    properties {
        property "sonar.projectName", "Android Analytics Sample"
        property "sonar.projectKey", "com.github.rchugunov.andlyticsgradleplugin"
        property "sonar.projectVersion", project
                .extensions["android"]
                .properties["defaultConfig"]
                .properties["versionName"]
        property "sonar.sources", "./src/main/java/"
        property "sonar.java.binaries", "./build/intermediates/classes/debug"
//        property "sonar.junit.reportsPath", "./build/test-results/release"
//        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
        property "sonar.verbose", "false"
    }
}